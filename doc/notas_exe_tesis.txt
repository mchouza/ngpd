OBJETIVOS (con tiempos)
=======================

- Agregar al JobManager como subsistema. [Jueves 3/4]
- Revisar puntos pendientes. [Jueves 3/4]
- Hacer un template que permita editar valores y que los mande modificados en un POST. [Jueves 3/4]
- Arreglar el sistema de logging. [Jueves 3/4]
- Corriendo trabajos ingresados por la interfaz (dividir en subtrabajos). [Hasta el Lunes 7/4]

OBJETIVOS CUMPLIDOS
===================
- Integrar con CTemplate (ver prueba en el Sandbox). [Lunes 31/3] (Empezado el 31/3, terminado el 1/4. Falta solo mejorar la integración.)
- Agregar a Modules como subsistema. [Miércoles 2/4] (Hecho el 1/4, falta ver mejor el tema del logger).
- Tener funcionando un daemon con server y templates HTML. [Martes 25/3] (Faltan las templates).
- Cargar módulos en base al XML. [Miércoles 26/3] (No realmente, abandoné el XML y voy a cargar en base al .properties)
- Conectar configuración con la interfaz web. Agregar transaccionalidad al manejo de archivos. [Jueves 27/3] (Terminado parcialmente, no hay escritura ni transaccionalidad. Funcionalidad básica de despliegue demostrada.)

FEATURES
========
- Es un daemon (ngpd).
- Se puede consultar su estado por "loopback", lo que implica que tiene info estadística en memoria.
- Toma un "trabajo" desde APPDATA y lo ejecuta.
- Admite límites en la RAM empleada para la población, ver como implementar.
- Admite terminar el trabajo por tiempo o por cantidad de generaciones.
- Admite límites en la cantidad de individuos en la población.
- Uso un sistema transaccional para actualizar los trabajos.
- Guardo info estadística junto al trabajo.

IMPLEMENTACIÓN
==============

GENERALIDADES
-------------
- El trabajo le indica qué módulos usar para cada cosa.
- El trabajo lleva asociado un archivo ".bin" donde guarda la población.
- Tomo la mayoría del manejo de módulos de 'gpgd'.
- Migrar los módulos (excepto el de SPICE, por razones de tamaño y licencia) al nuevo proyecto.

CONFIG
------
- Tengo dos archivos: 
  * Una configuración base, imposible de modificar por la interfaz web y que contiene cosas como paths de los templates.
  * Una configuración modificable, que se almacene en archivos pero puede modificarse desde la interfaz web.

- Para acceder a los datos de la configuración uso la URL 'http://localhost:<puerto>/config_data'. 
- Si hago un GET, tomo el query string 'prefix=seg1.seg2.seg3' para indicar que es lo que quiero ver.
- Una vez hechas las modificaciones, si se elige guardar, se realiza un POST a 'http://localhost:<puerto>/config_data' con 'var1SegA.var1SegB=valVar1&var2SegA.var2SegB.var2.SegC=valVar2'.
- Uso Javascript para crear edits en los valores que quiera cambiar.

- Uso un editor en la interfaz web para crear nuevos trabajos. Es similar a la interfaz de configuración, pero uso un SVG para la transferencia en forma gráfica.

- Uso HTMLForm para parsear los query strings.
- Probablemente convenga hacer un nuevo ProcReq, ya que el actual es muy inflexible.
- Agregar string con fecha y hora de compilación a la aplicación y a los módulos.
